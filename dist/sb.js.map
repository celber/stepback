{"version":3,"sources":["Core.js","ComponentManager.js","Component.js","Container.js","Element.js","Query.js","Fit.js","VSplit.js","Button.js","Arrow.js","Item.js","Avatar.js"],"names":[],"mappingstEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sb.js","sourcesContent":["'use strict';\n\nvar Sb = {};\n\nSb.config = {\n    fx: {\n        animations: true,\n        duration: 1\n    },\n    map: {\n        apiKey: String\n    }\n};\n\nSb.namespace = function (namespace) {\n    var ns = namespace.split('.'), \n        branch = this,\n        i;\n\n    for (i = 0; i < ns.length; ++i) {\n        if (!branch[ns[i]]) {\n            branch[ns[i]] = {}\n        }\n        \n        branch = branch[ns[i]];\n    }\n\n    return branch;\n};\n\nSb.clone = function (source) {\n    var target = Object();\n\n    for (var nextKey in source) {\n        // Avoid bugs when hasOwnProperty is shadowed\n        if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n            target[nextKey] = source[nextKey];\n        }\n    }\n\n    return target;\n};\n\nSb.extend = function (target, source) {\n    for (var key in source) {\n        if (source[key] instanceof Array) {\n            (target[key] === undefined) && (target[key] = []);\n            target[key] = target[key].concat(source[key]);\n        } else if (typeof source[key] == 'object' && typeof target[key] == 'object' && target[key] !== null) {\n            (target[key] === undefined) && (target[key] = {}); \n            this.extend(target[key], source[key]);\n        } else {\n            target[key] = source[key];\n        }\n    }\n};\n\nSb.formatString = function (string, data) {\n    for (var key in data) {\n        string = string.replace(\"{\" + key + \"}\", data[key])\n    }\n\n    return string;\n};","Sb.ComponentManager = function () {\n\n};\n\n(function(self) {\n    self.registry = {};\n\n    self.register = function (type, construct) {\n        if (this.registry[type]) {\n            new Error('Component '+type+' already exists in Component Managers!');\n        }\n        this.registry[type] = construct;\n    };\n\n    self.get = function (type) {\n        if (!this.registry[type]) {\n            new Error('Component '+type+' does not exists in Component Managers!');\n        }\n        return this.registry[type];\n    };\n\n    self.create = function (config) {\n        var cls = self.get(config.componentType);\n        return new cls(config);\n    };\n}(Sb.ComponentManager.prototype));\n\nSb.ComponentManager = new Sb.ComponentManager();","\"use strict\";\nSb.Component = function (_config) {\n    var config = _config || {};\n    var baseClass = 'sb-component';\n    this.id;\n    this.el;\n    this.rendered = false;\n    this.parent;\n    this.classList = [baseClass];\n    this.templateData = {};\n\n    Sb.extend(this, config);\n\n    if (!config.id) {\n        this.id = Sb.Component.getId();\n    }\n\n    this.classList = this.classList.concat([this.baseClass]);\n};\n\nSb.Component.NEXT_ID = 1;\n\nSb.Component.getId = function () {\n    return \"sb-\" + Sb.Component.NEXT_ID++;\n}; \n\n(function (self) {\n    \n    self.template = '<div></div>';\n\n    self.renderTo = function (target) {\n        this.beforeRender(target);\n        console.log(this.template, this.templateData)\n        this.el = this.el || Sb.Element.render(Sb.formatString(this.template, this.templateData));\n        this.el.setAttribute('id', this.id);\n        if (this.classList.length) {\n            this.el.addClass.apply(this.el, this.classList);\n        }\n        this.parent = target;\n        target.append(this.el);\n        this.rendered = true;\n        this.afterRender(target);\n        return this;\n    };\n\n    self.addClass = function (cls) {\n        this.el.addClass(cls);\n        this.classList.push(cls);\n    };\n\n    self.removeClass = function (cls) {\n        this.el.removeClass(cls);\n        this.classList = this.classList.filter(function(value) {\n            return value !== cls;\n        });\n    };\n\n    // abstract\n    self.beforeRender = function (target) {};\n    self.afterRender = function (target) {};\n\n} (Sb.Component.prototype));\n\nSb.ComponentManager.register('component', Sb.Component);","Sb.Container = function (config) {\n    this.containerEl = null;\n    this.items = [];\n    this.layout = null;\n\n    Sb.Component.call(this, config);\n\n\n    this.classList = this.classList.concat(['sb-container']);\n\n    for (var i in this.items) {\n        this.items[i] = this.createItem(this.items[i]);\n    }\n};\n\n(function (self) {\n    Sb.extend(self, Sb.Component.prototype);\n\n    self.addItem = function (item) {\n        this.items.push(this.createItem(item));\n        this.renderTo(this.parent);\n    };\n\n    self.getContainerEl = function () {\n        return this.el;\n    };\n\n    self.createItem = function (itemConfig) {\n        return Sb.ComponentManager.create(itemConfig);\n    };\n\n    self.renderTo = function(target) {\n        var suspendItemRender = false;\n        Sb.Component.prototype.renderTo.call(this, target);\n\n        this.containerEl = this.getContainerEl();\n\n        for (var i = 0; i < this.items.length; ++i) {\n            suspendItemRender = !!this.beforeItemRender(this.items[i], i, this.containerEl);\n            suspendItemRender || this.renderItem(this.items[i], this.containerEl);\n            suspendItemRender || this.afterItemRender(this.items[i], i, this.containerEl);\n        }\n    };\n\n    self.renderItem = function (item, containerEl) {\n        item.rendered || item.renderTo(containerEl);\n        return item;\n    }\n\n    self.beforeItemRender = function (item, itemIdx, containerEl) {\n        // abstract\n    };\n\n    self.afterItemRender = function (item, itemIdx, containerEl) {\n        // abstract\n    };\n}(Sb.Container.prototype));\n\nSb.ComponentManager.register('container', Sb.Container);","'use strict';\n\nSb.Element = function (el, config) {\n    this.nativeElement = el;\n    Sb.extend(this.config, config);\n}; \n\nSb.Element.render = function (template) {\n    var element;\n    var tempEl = document.createElement('template');\n    var html = template.trim(); // Never return a text node of whitespace as the result\n    tempEl.innerHTML = html;\n    \n    element = new Sb.Element(document.adoptNode(tempEl.content.firstChild));\n    element.template = template;\n\n    return element;\n};\n\n(function (extend) {\n    extend.id = null;\n    extend.nativeElement = null;\n    extend.config = {};\n    extend.listeners = {};\n    extend.template = null;\n\n    extend.hasClass = function (cls) {\n        return Array.prototype.indexOf.call(this.nativeElement.classList, cls) !== -1;\n    };\n\n    extend.addClass = function (cls) {\n        this.nativeElement.classList.add.apply(this.nativeElement.classList, arguments);\n    };\n\n    extend.removeClass = function (cls) {\n        this.nativeElement.classList.remove(cls);\n    };\n\n    extend.toggleClass = function (cls) {\n        this[this.hasClass(cls) ? 'removeClass':'addClass'](cls);\n    };\n\n    extend.on = function (event, handler) {\n        this.nativeElement.addEventListener(event, handler);\n    };\n\n    extend.off = function (event, handler) {\n        this.nativeElement.removeEventListener(event, handler);\n    };\n\n    extend.hide = function (useVisibility) {\n        this.addClass(useVisibility ? 'invisible' : 'hidden');\n    };\n\n    extend.show = function () {\n        this.removeClass('hidden');\n        this.removeClass('invisible');\n    };\n\n    extend.toggle = function (useVisibility) {\n        this.toggleClass(useVisibility ? 'invisible' : 'hidden');\n    };\n\n    extend.append = function (element) {\n        this.nativeElement.appendChild(element.nativeElement);\n    };\n\n    extend.setAttribute = function (name, value) {\n        this.nativeElement.setAttribute(name, value);\n    }; \n})(Sb.Element.prototype);","Sb.queryOne = function (query) {\n    return new Sb.Element(document.querySelector(query));\n};\n\nSb.queryAll = function (query) {\n    return Array.prototype.map.call(\n        document.querySelectorAll(query),\n        function (el) {\n            return new Sb.Element(el);\n    });\n};","Sb.namespace(\"layout\");\nSb.layout.Fit = function (_config) {\n    Sb.Container.call(this, _config);\n\n    this.classList = this.classList.concat(['sb-fit-layout']);\n};\n\n(function (extend) {\n    Sb.extend(extend, Sb.Container.prototype);\n    \n    extend.template = `<div></div>`;\n})(Sb.layout.Fit.prototype);\n\nSb.ComponentManager.register('fit', Sb.layout.Fit);","Sb.namespace(\"layout\");\nSb.layout.VSplit = function (_config) {\n    this.baseClass = 'sb-vsplit-layout';\n\n    this.classList = this.classList.concat([this.baseClass]);\n    Sb.Container.call(this, _config);\n    \n};\n\n(function (self) {\n    Sb.extend(self, Sb.Container.prototype);\n    \n    self.template = `<div></div>`;\n\n    self.renderTo = function (target) {\n        Sb.Container.prototype.renderTo.call(this, target);\n    };\n\n    self.afterItemRender = function (item, itemIdx, containerEl) {\n        \n        item.addClass(this.baseClass+'-child');\n\n        // append gutter\n        // ignore last element so gutter is not added at the end\n        if (itemIdx !==  ( this.items.length - 1 )) {\n            containerEl.append(self.createSplitBorder());\n        }\n    };\n\n    self.createSplitBorder = function () {\n        return Sb.Element.render('<div class=\"'+this.baseClass+'-gutter\">&nbsp;</div>');\n    }\n})(Sb.layout.VSplit.prototype);\n\nSb.ComponentManager.register('vsplit', Sb.layout.VSplit);","Sb.namespace(\"zendesk\");\n\nSb.zendesk.Button = function (config) {\n    Sb.Component.call(this, config);\n\n    if (config.primary) {\n        this.classList.push(\"c-btn--primary\");\n    }\n\n    if (config.handler) {\n        this.handler = config.handler;\n    }\n\n    this.templateData['text'] = config.text;\n};\n\n(function (self) {\n    Sb.extend(self, Sb.Component.prototype);\n\n    self.baseClass = 'sb-zen-button';\n    self.text = null;\n    self.handler = function () {};\n    \n    self.template = '<div class=\"c-btn\">{text}</div>';\n\n    self.setHandler = function (handler) {\n        var me = this;\n        me.el.off('click', me.handler);\n        me.handler = function () {\n            handler.apply(me);\n        };\n        me.el.on('click', me.handler);\n    };\n\n    self.afterRender = function (target) {\n        this.setHandler(this.handler);\n    };\n})(Sb.zendesk.Button.prototype);\n\nSb.ComponentManager.register('zen:button', Sb.zendesk.Button);","Sb.namespace(\"zendesk\");\n\nSb.zendesk.Arrow = function (config) {\n    Sb.Container.call(this, config);\n\n    this.templateData['orientation'] = config.orientation;\n};\n\n(function (self) {\n    Sb.extend(self, Sb.Container.prototype);\n    self.baseClass = 'sb-zen-arrow';\n\n    self.template = '<ul class=\"c-arrow c-menu c-arrow--{orientation}\"></ul>';\n})(Sb.zendesk.Arrow.prototype);\n\n\nSb.ComponentManager.register('zen:arrow', Sb.zendesk.Arrow);","Sb.namespace(\"zendesk.menu\");\n\nSb.zendesk.menu.Item = function (config) {\n    Sb.zendesk.Button.call(this, config);\n    console.log('222')\n};\n\n(function (self) {\n    Sb.extend(self, Sb.zendesk.Button.prototype);\n    self.baseClass = 'sb-zen-menuitem';\n\n    self.template = '<div class=\"c-menu__item\">{text}</div>';\n})(Sb.zendesk.menu.Item.prototype);\n\nSb.ComponentManager.register('zen:menuitem', Sb.zendesk.menu.Item);","Sb.namespace(\"zendesk\");\n\nSb.zendesk.Avatar = function (config) {\n    Sb.Container.call(this, config);\n\n    this.templateData['system'] = config.system ? 'c-avatar--system' : '' ;\n    this.templateData['size'] = config.size || 'md';\n    this.templateData['alt'] = config.alt || '';\n    this.templateData['src'] = config.src;\n};\n\n(function (self) {\n    Sb.extend(self, Sb.Component.prototype);\n    self.baseClass = 'sb-zen-avatar';\n\n    self.template = `<figure class=\"c-avatar {system} c-avatar--size\">\n        <img alt='' src={src}>\n    </figure> `;\n})(Sb.zendesk.Avatar.prototype);\n\n\nSb.ComponentManager.register('zen:avatar', Sb.zendesk.Avatar);"]}